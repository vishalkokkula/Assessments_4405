# -*- coding: utf-8 -*-
"""LVADSUSR197_vishal_k.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/107_nX3siA9pWQ7GU3h1jF48LqPZsbJAm
"""

# 1 (a)

# loading the data set

import pandas as pd
data = pd.read_csv('/content/Final Dataset - IPL.csv')
data

# 1 (b)

# to return the rows & columns

data #returning the data frame -- this returns the "Number of ROWS & COLUMNS in the data set."

# to print data types of each column
print("\n--------------Data Type of each column--------------\n")
x= data.head(1)
for i in x:
  print(i,type(i))  # This block of code -- takes the 1st Row and displays the data type of the each column!!

# to check null values
print("\n--------------checking null values--------------")
y = data.isnull() # returns true for each row and column if it is Null
print("\n",y)

# 2 (a)
data.fillna("empty")
'''
--- this finds the null values in the data and replace them with "empty"
  we can also use data.replace("n.a",'emp') to do the same

--- changed the null values to empty instead of deleting the row to do better analysis

'''

# 2(b)

# to find the duplicate values in the data set
dup = data.duplicated()
print(dup)

# 3

print("Mean of first_ings_Score :",data['first_ings_score'].mean())
print("Median of first_ings_Score :",data['first_ings_score'].median())
print("Std of first_ings_Score :",data['first_ings_score'].std())
print("Variance of first_ings_Score :",data['first_ings_score'].var())


print("\nMean of first_ings_wkts :",data['first_ings_wkts'].mean())
print("Median of first_ings_wkts :",data['first_ings_wkts'].median())
print("Std of first_ings_wkts :",data['first_ings_wkts'].std())
print("Variance of first_ings_wkts :",data['first_ings_wkts'].var())


print("\nMean of highscore :",data['highscore'].mean())
print("Median of highscore :",data['highscore'].median())
print("Std of highscore :",data['highscore'].std())
print("Variance of highscore :",data['highscore'].var())

# similarly we can check the different calculations for remaining numerical values!!

# 4 (first ings vs 2nd ings score) ---- Line Chart

import matplotlib.pyplot as plt
data.plot('match_id',['first_ings_score','second_ings_score'], kind = 'line', figsize=(15,6))
plt.gca().spines[['top', 'right']].set_visible(False)

# toss decision ------  BAR

import matplotlib.pyplot as plt
import seaborn as sns
data.groupby('toss_decision').size().plot(kind='barh', color=sns.palettes.mpl_palette('Dark2'))
plt.gca().spines[['top', 'right',]].set_visible(False)

#  first_ings_score vs first_ings_wkts------ Scatter

import matplotlib.pyplot as plt
data.plot(kind='scatter', x='first_ings_score', y='first_ings_wkts', s=32, alpha=.8)
plt.gca().spines[['top', 'right',]].set_visible(False)

#  first_ings_score -- HIST

import matplotlib.pyplot as plt
data['first_ings_score'].plot(kind='hist', bins=20, title='first_ings_score')
plt.gca().spines[['top', 'right',]].set_visible(False)

# 5

#  toss_decision vs won_by

from matplotlib import pyplot as plt
import seaborn as sns
import pandas as pd
plt.subplots(figsize=(8, 8))
df_2dhist = pd.DataFrame({
    x_label: grp['won_by'].value_counts()
    for x_label, grp in data.groupby('toss_decision')
})
sns.heatmap(df_2dhist, cmap='viridis')
plt.xlabel('toss_decision')
_ = plt.ylabel('won_by')

# 6
data.plot(kind='box',figsize=(20,10))

# this returns the "outliers" present in the data for all the columns in the data set!!

# to keep, remove or handle the outliers vary from column to column -- which may increase the total efficiency and accuracy in the analysis.

# 7

# @title stage

from matplotlib import pyplot as plt
import seaborn as sns
data.groupby('stage').size().plot(kind='barh', color=sns.palettes.mpl_palette('Dark2'))
plt.gca().spines[['top', 'right',]].set_visible(False)

# 8

mom = data['player_of_the_match'].value_counts().head(10) #mom - man of the match
print(mom)
print()

impact_player = data['top_scorer'].value_counts().head(10)
print("\n",impact_player)

best_bowler = data['best_bowling'].value_counts().head(10)
print("\n",best_bowler)

# -- the above 3 blocks returns the top 10 : player's of the match, best bowlers, and impact players!!

# 9
'''
From the previous analysis:
1) Kuldeep Yadav - 4, Jos Buttler - 3 -- secured player of the match frequently
2) Jos Buttler, Quinton de Kock, Liam Livingstone, Shubman Gill, KL Rahul -- are the frequent top scorers for matches than the other
3) Yuzvendra Chahal, Rashid Khan -- are the best bowlers in the series. Took quite a lot wickets!!
'''
data

