# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fRYC8yZ-brffOOGqgjdcBckGI7H-jnAF
"""

# 1
import numpy as np
arr = np.array([1,2,3,4,5,6])
print("Min:",np.min(arr))
print("Max:",np.max(arr))
print("Sum:",np.sum(arr))
print("Mean:",np.mean(arr))
print("Std Deviation:",np.std(arr))

# 2
health_data = np.array([[160, 70, 30],   # height, weight, age for individual 1
                        [165, 65, 35],   # height, weight, age for individual 2
                        [170, 75, 40]])  # height, weight, age for individual 3
print(np.mean(health_data))
print(np.std(health_data))

# 3
import numpy as np
stu_marks = np.array([[20,25,22,21],[18,14,15,0],[13,-1,10,2]])

for i in stu_marks:
  m=[]
  for j in i:
    if j<=0:
      continue
m.append(i)
req_data = stu_marks - m

print(np.mean(req_data[1:]))

# 4
import numpy as np

temp_data =np.linspace(15,25,24)
#print(temp_data)
for i in temp_data:
  print(f"{i} C")

# 5
import numpy as np
daily_closing_prices = np.array([100, 102, 98, 105, 107, 110, 108, 112, 115, 118, 120])
#window_size = 5
n = 5
m=[]
for i in range(0,len(daily_closing_prices)):
  #m = []
  m.append(daily_closing_prices[i:n])
  n=n+1
  if (len(m)) == 5:

    break
for i in m:
  print("Running Average (5days from today!) -",np.mean(i))

# 6

NA

# 7
import numpy as np
properties_matrix = np.array([[1, 2, 3],
                              [4, 5, 6],
                              [7, 8, 9]])
det =np.linalg.det(properties_matrix)

print(det)

# 8
import numpy as np

arr3 =np.array([[[1,2,3],[4,5,6]]])
condition = arr3 > 5
arrr = arr3[condition]
print(arrr)

# 9
import pandas as pd
data = {'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Eve', 'Frank', 'Grace'],
        'Age': [25, 30, 35, 40, 45, 50, 55],
        'City': ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Miami', 'Boston'],
        'Department': ['HR', 'IT', 'Finance', 'Marketing', 'Sales', 'IT', 'HR']}
df = pd.DataFrame(data)

req_df =df[(df['Age']<45) & (df['Department'] != 'HR')]

print(req_df)

# 10
import pandas as pd

data = {'Department': ['Electronics', 'Electronics', 'Clothing', 'Clothing', 'Home Goods'],
        'Salesperson': ['Alice', 'Bob', 'Charlie', 'David', 'Eve'],
        'Sales': [70000, 50000, 30000, 40000, 60000]}

df = pd.DataFrame(data)
total_sales = sum(df['Sales'])

df['avg sales % per sperson'] = (df['Sales']/total_sales) * 100
df['Dept_rank(in asc)'] = df['avg sales % per sperson'].rank()
print(df)

# 11
import pandas as pd
data = {
    'Product': ['Apples', 'Bananas', 'Cherries', 'Dates', 'Elderberries', 'Flour', 'Grapes'],
    'Category': ['Fruit', 'Fruit', 'Fruit', 'Fruit', 'Fruit', 'Bakery', 'Fruit'],
    'Price': [1.20, 0.50, 3.00, 2.50, 4.00, 1.50, 2.00],
    'Promotion': [True, False, True, True, False, True, False]
}
df = pd.DataFrame(data)
avg_price = np.mean(df['Price']) # avg = 2.1

df['Avg'] = (df['Price']>avg_price)

req_df =df[(df['Avg']==True) & (df['Promotion'] == False)]
print(req_df)

# 12
import pandas as pd

employee_data = {
    'Employee': ['Alice', 'Bob', 'Charlie', 'David'],
    'Department': ['HR', 'IT', 'Finance', 'IT'],
    'Manager': ['John', 'Rachel', 'Emily', 'Rachel']
}

# Dataset of employee project assignments
project_data = {
    'Employee': ['Alice', 'Charlie', 'Eve'],
    'Project': ['P1', 'P3', 'P2']
}

req_data = {
    'Employee': ['Alice', 'Bob', 'Charlie', 'David'],
    'Department': ['HR', 'IT', 'Finance', 'IT'],
    'Manager': ['John', 'Rachel', 'Emily', 'Rachel'],
    'Project': ['P1', None, 'P2',None]
}
df = pd.DataFrame(req_data)
print(df)
'''
df_emp = pd.DataFrame(employee_data)
df_p = pd.DataFrame(project_data)

req = pd.concat([df_emp,df_p],axis = 0)
'''

# 13
NA

# 14
NA

# 15

# -- NA